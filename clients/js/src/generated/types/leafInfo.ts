/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Context, Serializer } from '@metaplex-foundation/umi';

export type LeafInfo = { leaf: Uint8Array; proof: Array<Uint8Array> };

export type LeafInfoArgs = LeafInfo;

export function getLeafInfoSerializer(
  context: Pick<Context, 'serializer'>
): Serializer<LeafInfoArgs, LeafInfo> {
  const s = context.serializer;
  return s.struct<LeafInfo>(
    [
      ['leaf', s.bytes({ size: 32 })],
      ['proof', s.array(s.bytes({ size: 32 }))],
    ],
    { description: 'LeafInfo' }
  ) as Serializer<LeafInfoArgs, LeafInfo>;
}
