/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Context,
  GetDataEnumKind,
  GetDataEnumKindContent,
  Option,
  PublicKey,
  Serializer,
} from '@metaplex-foundation/umi';
import {
  MigrationType,
  MigrationTypeArgs,
  getMigrationTypeSerializer,
} from '.';

export type MigrateArgs = {
  __kind: 'V1';
  migrationType: MigrationType;
  ruleSet: Option<PublicKey>;
};

export type MigrateArgsArgs = {
  __kind: 'V1';
  migrationType: MigrationTypeArgs;
  ruleSet: Option<PublicKey>;
};

export function getMigrateArgsSerializer(
  context: Pick<Context, 'serializer'>
): Serializer<MigrateArgsArgs, MigrateArgs> {
  const s = context.serializer;
  return s.dataEnum<MigrateArgs>(
    [
      [
        'V1',
        s.struct<GetDataEnumKindContent<MigrateArgs, 'V1'>>([
          ['migrationType', getMigrationTypeSerializer(context)],
          ['ruleSet', s.option(s.publicKey())],
        ]),
      ],
    ],
    { description: 'MigrateArgs' }
  ) as Serializer<MigrateArgsArgs, MigrateArgs>;
}

// Data Enum Helpers.
export function migrateArgs(
  kind: 'V1',
  data: GetDataEnumKindContent<MigrateArgsArgs, 'V1'>
): GetDataEnumKind<MigrateArgsArgs, 'V1'>;
export function migrateArgs<K extends MigrateArgsArgs['__kind']>(
  kind: K,
  data?: any
): Extract<MigrateArgsArgs, { __kind: K }> {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}
export function isMigrateArgs<K extends MigrateArgs['__kind']>(
  kind: K,
  value: MigrateArgs
): value is MigrateArgs & { __kind: K } {
  return value.__kind === kind;
}
